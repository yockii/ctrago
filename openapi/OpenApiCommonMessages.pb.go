// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: OpenApiCommonMessages.proto

package openapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * Base message that is used for all messages that are sent to/from Open API proxy of cTrader platform.
type ProtoMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PayloadType   *uint32                `protobuf:"varint,1,req,name=payloadType" json:"payloadType,omitempty"` // Contains id of ProtoPayloadType or other custom PayloadTypes (e.g. ProtoOAPayloadType).
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`          // Serialized protobuf message that corresponds to payloadType.
	ClientMsgId   *string                `protobuf:"bytes,3,opt,name=clientMsgId" json:"clientMsgId,omitempty"`  // Request message id, assigned by the client that will be returned in the response.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoMessage) Reset() {
	*x = ProtoMessage{}
	mi := &file_OpenApiCommonMessages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMessage) ProtoMessage() {}

func (x *ProtoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiCommonMessages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMessage.ProtoReflect.Descriptor instead.
func (*ProtoMessage) Descriptor() ([]byte, []int) {
	return file_OpenApiCommonMessages_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoMessage) GetPayloadType() uint32 {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return 0
}

func (x *ProtoMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ProtoMessage) GetClientMsgId() string {
	if x != nil && x.ClientMsgId != nil {
		return *x.ClientMsgId
	}
	return ""
}

// * Error response that is sent from Open API proxy when error occurs.
type ProtoErrorRes struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	PayloadType             *ProtoPayloadType      `protobuf:"varint,1,opt,name=payloadType,enum=ProtoPayloadType,def=50" json:"payloadType,omitempty"`
	ErrorCode               *string                `protobuf:"bytes,2,req,name=errorCode" json:"errorCode,omitempty"`                              // Contains name of ProtoErrorCode or other custom ErrorCodes (e.g. ProtoCHErrorCode).
	Description             *string                `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`                          // Error description.
	MaintenanceEndTimestamp *uint64                `protobuf:"varint,4,opt,name=maintenanceEndTimestamp" json:"maintenanceEndTimestamp,omitempty"` // The Unix time in milliseconds of the end of the maintenance.
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

// Default values for ProtoErrorRes fields.
const (
	Default_ProtoErrorRes_PayloadType = ProtoPayloadType_ERROR_RES
)

func (x *ProtoErrorRes) Reset() {
	*x = ProtoErrorRes{}
	mi := &file_OpenApiCommonMessages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoErrorRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoErrorRes) ProtoMessage() {}

func (x *ProtoErrorRes) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiCommonMessages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoErrorRes.ProtoReflect.Descriptor instead.
func (*ProtoErrorRes) Descriptor() ([]byte, []int) {
	return file_OpenApiCommonMessages_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoErrorRes) GetPayloadType() ProtoPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoErrorRes_PayloadType
}

func (x *ProtoErrorRes) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *ProtoErrorRes) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProtoErrorRes) GetMaintenanceEndTimestamp() uint64 {
	if x != nil && x.MaintenanceEndTimestamp != nil {
		return *x.MaintenanceEndTimestamp
	}
	return 0
}

// * Event that is sent from Open API proxy and can be used as criteria that connection is healthy when no other messages are sent by cTrader platform. Open API client can send this message when he needs to keep the connection open for a period without other messages longer than 30 seconds.
type ProtoHeartbeatEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PayloadType   *ProtoPayloadType      `protobuf:"varint,1,opt,name=payloadType,enum=ProtoPayloadType,def=51" json:"payloadType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ProtoHeartbeatEvent fields.
const (
	Default_ProtoHeartbeatEvent_PayloadType = ProtoPayloadType_HEARTBEAT_EVENT
)

func (x *ProtoHeartbeatEvent) Reset() {
	*x = ProtoHeartbeatEvent{}
	mi := &file_OpenApiCommonMessages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoHeartbeatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoHeartbeatEvent) ProtoMessage() {}

func (x *ProtoHeartbeatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiCommonMessages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoHeartbeatEvent.ProtoReflect.Descriptor instead.
func (*ProtoHeartbeatEvent) Descriptor() ([]byte, []int) {
	return file_OpenApiCommonMessages_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoHeartbeatEvent) GetPayloadType() ProtoPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoHeartbeatEvent_PayloadType
}

var File_OpenApiCommonMessages_proto protoreflect.FileDescriptor

const file_OpenApiCommonMessages_proto_rawDesc = "" +
	"\n" +
	"\x1bOpenApiCommonMessages.proto\x1a OpenApiCommonModelMessages.proto\"l\n" +
	"\fProtoMessage\x12 \n" +
	"\vpayloadType\x18\x01 \x02(\rR\vpayloadType\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12 \n" +
	"\vclientMsgId\x18\x03 \x01(\tR\vclientMsgId\"\xc9\x01\n" +
	"\rProtoErrorRes\x12>\n" +
	"\vpayloadType\x18\x01 \x01(\x0e2\x11.ProtoPayloadType:\tERROR_RESR\vpayloadType\x12\x1c\n" +
	"\terrorCode\x18\x02 \x02(\tR\terrorCode\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x128\n" +
	"\x17maintenanceEndTimestamp\x18\x04 \x01(\x04R\x17maintenanceEndTimestamp\"[\n" +
	"\x13ProtoHeartbeatEvent\x12D\n" +
	"\vpayloadType\x18\x01 \x01(\x0e2\x11.ProtoPayloadType:\x0fHEARTBEAT_EVENTR\vpayloadTypeBL\n" +
	"\"com.xtrader.protocol.proto.commonsB\x17ContainerCommonMessagesP\x01Z\b/openapi\xa0\x01\x01"

var (
	file_OpenApiCommonMessages_proto_rawDescOnce sync.Once
	file_OpenApiCommonMessages_proto_rawDescData []byte
)

func file_OpenApiCommonMessages_proto_rawDescGZIP() []byte {
	file_OpenApiCommonMessages_proto_rawDescOnce.Do(func() {
		file_OpenApiCommonMessages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_OpenApiCommonMessages_proto_rawDesc), len(file_OpenApiCommonMessages_proto_rawDesc)))
	})
	return file_OpenApiCommonMessages_proto_rawDescData
}

var file_OpenApiCommonMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_OpenApiCommonMessages_proto_goTypes = []any{
	(*ProtoMessage)(nil),        // 0: ProtoMessage
	(*ProtoErrorRes)(nil),       // 1: ProtoErrorRes
	(*ProtoHeartbeatEvent)(nil), // 2: ProtoHeartbeatEvent
	(ProtoPayloadType)(0),       // 3: ProtoPayloadType
}
var file_OpenApiCommonMessages_proto_depIdxs = []int32{
	3, // 0: ProtoErrorRes.payloadType:type_name -> ProtoPayloadType
	3, // 1: ProtoHeartbeatEvent.payloadType:type_name -> ProtoPayloadType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_OpenApiCommonMessages_proto_init() }
func file_OpenApiCommonMessages_proto_init() {
	if File_OpenApiCommonMessages_proto != nil {
		return
	}
	file_OpenApiCommonModelMessages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_OpenApiCommonMessages_proto_rawDesc), len(file_OpenApiCommonMessages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_OpenApiCommonMessages_proto_goTypes,
		DependencyIndexes: file_OpenApiCommonMessages_proto_depIdxs,
		MessageInfos:      file_OpenApiCommonMessages_proto_msgTypes,
	}.Build()
	File_OpenApiCommonMessages_proto = out.File
	file_OpenApiCommonMessages_proto_goTypes = nil
	file_OpenApiCommonMessages_proto_depIdxs = nil
}
